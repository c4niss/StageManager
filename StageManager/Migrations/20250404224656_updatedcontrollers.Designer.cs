// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestRestApi.Data;

#nullable disable

namespace StageManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250404224656_updatedcontrollers")]
    partial class updatedcontrollers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StageManager.Models.Attestation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CheminFichier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateGeneration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstDelivree")
                        .HasColumnType("bit");

                    b.Property<int>("MembreDirectionId")
                        .HasColumnType("int");

                    b.Property<int>("StagiaireId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MembreDirectionId");

                    b.HasIndex("StagiaireId")
                        .IsUnique();

                    b.ToTable("Attestations");
                });

            modelBuilder.Entity("StageManager.Models.Avenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAvenant")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDecision")
                        .HasColumnType("datetime2");

                    b.Property<int>("EncadreurId")
                        .HasColumnType("int");

                    b.Property<bool>("EstAccepter")
                        .HasColumnType("bit");

                    b.Property<string>("Motif")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("NouvelleFinprevue")
                        .HasColumnType("datetime2");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EncadreurId");

                    b.HasIndex("StageId")
                        .IsUnique();

                    b.ToTable("Avenants");
                });

            modelBuilder.Entity("StageManager.Models.ChefDepartement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartementId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EstActif")
                        .HasColumnType("bit");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.ToTable("ChefDepartements");
                });

            modelBuilder.Entity("StageManager.Models.Convention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CheminFichier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateDepot")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstValidee")
                        .HasColumnType("bit");

                    b.Property<int>("MembreDirectionId")
                        .HasColumnType("int");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MembreDirectionId");

                    b.HasIndex("StageId")
                        .IsUnique();

                    b.ToTable("Conventions");
                });

            modelBuilder.Entity("StageManager.Models.DemandeDeStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDemande")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DemandeaccordId")
                        .HasColumnType("int");

                    b.Property<int?>("MembreDirectionId")
                        .HasColumnType("int");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.Property<string>("cheminfichier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MembreDirectionId");

                    b.ToTable("DemandesDeStage");
                });

            modelBuilder.Entity("StageManager.Models.DemandeDepotMemoire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CheminFichier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DateDemande")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MembreDirectionId")
                        .HasColumnType("int");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MembreDirectionId");

                    b.HasIndex("StageId");

                    b.ToTable("DemandesDepotMemoire");
                });

            modelBuilder.Entity("StageManager.Models.Demandeaccord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChefDepartementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<int>("DemandeStageId")
                        .HasColumnType("int");

                    b.Property<int?>("EncadreurId")
                        .HasColumnType("int");

                    b.Property<string>("FichePieceJointe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.PrimitiveCollection<string>("Stagiaires")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("ThemeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChefDepartementId");

                    b.HasIndex("DemandeStageId")
                        .IsUnique();

                    b.HasIndex("EncadreurId");

                    b.ToTable("DemandesAccord");
                });

            modelBuilder.Entity("StageManager.Models.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChefDepartementId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ChefDepartementId");

                    b.ToTable("Departements");
                });

            modelBuilder.Entity("StageManager.Models.Domaine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartementId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.ToTable("Domaines");
                });

            modelBuilder.Entity("StageManager.Models.Encadreur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDemande")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartementId")
                        .HasColumnType("int");

                    b.Property<int?>("DomaineId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EstActif")
                        .HasColumnType("bit");

                    b.Property<bool>("EstDisponible")
                        .HasColumnType("bit");

                    b.Property<string>("Fonction")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NbrStagiaires")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("StagiaireMax")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.HasIndex("DomaineId");

                    b.ToTable("Encadreurs");
                });

            modelBuilder.Entity("StageManager.Models.FicheDePointage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<int>("EncadreurId")
                        .HasColumnType("int");

                    b.Property<int>("HeureEffectuees")
                        .HasColumnType("int");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<int>("StagiaireId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EncadreurId");

                    b.HasIndex("StageId");

                    b.HasIndex("StagiaireId")
                        .IsUnique();

                    b.ToTable("FichesDePointage");
                });

            modelBuilder.Entity("StageManager.Models.FicheEvaluationEncadreur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateEvaluation")
                        .HasColumnType("datetime2");

                    b.Property<int>("EncadreurId")
                        .HasColumnType("int");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EncadreurId");

                    b.HasIndex("StageId");

                    b.ToTable("FichesEvaluationEncadreur");
                });

            modelBuilder.Entity("StageManager.Models.FicheEvaluationStagiaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateEvaluation")
                        .HasColumnType("datetime2");

                    b.Property<int>("EncadreurId")
                        .HasColumnType("int");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<int>("StagiaireId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EncadreurId");

                    b.HasIndex("StageId")
                        .IsUnique();

                    b.HasIndex("StagiaireId")
                        .IsUnique();

                    b.ToTable("FichesEvaluationStagiaire");
                });

            modelBuilder.Entity("StageManager.Models.MembreDirection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatePrisePoste")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EstActif")
                        .HasColumnType("bit");

                    b.Property<string>("Fonction")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("MembresDirection");
                });

            modelBuilder.Entity("StageManager.Models.Memoire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CheminFichier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateDepot")
                        .HasColumnType("datetime2");

                    b.Property<int>("DemandeDepotMemoireId")
                        .HasColumnType("int");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("DemandeDepotMemoireId")
                        .IsUnique();

                    b.HasIndex("StageId")
                        .IsUnique();

                    b.ToTable("Memoires");
                });

            modelBuilder.Entity("StageManager.Models.Stage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvenantId")
                        .HasColumnType("int");

                    b.Property<int>("ConventionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartementId")
                        .HasColumnType("int");

                    b.Property<int?>("DomaineId")
                        .HasColumnType("int");

                    b.Property<int>("EncadreurId")
                        .HasColumnType("int");

                    b.Property<int>("FicheEvaluationStagiaireId")
                        .HasColumnType("int");

                    b.Property<int>("MemoireId")
                        .HasColumnType("int");

                    b.Property<string>("StagiaireGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.HasIndex("DomaineId");

                    b.HasIndex("EncadreurId");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("StageManager.Models.Stagiaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttestationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DemandeDeStageId")
                        .HasColumnType("int");

                    b.Property<int?>("DemandeaccordId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EstActif")
                        .HasColumnType("bit");

                    b.Property<int?>("FicheDePointageId")
                        .HasColumnType("int");

                    b.Property<int>("FicheEvaluationStagiaireId")
                        .HasColumnType("int");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Specialite")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StageId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Universite")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DemandeDeStageId");

                    b.HasIndex("DemandeaccordId");

                    b.HasIndex("StageId");

                    b.ToTable("Stagiaires");
                });

            modelBuilder.Entity("StageManager.Models.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DemandeaccordId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DemandeaccordId")
                        .IsUnique();

                    b.HasIndex("StageId");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("StageManager.Models.Attestation", b =>
                {
                    b.HasOne("StageManager.Models.MembreDirection", "MembreDirection")
                        .WithMany("Attestations")
                        .HasForeignKey("MembreDirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StageManager.Models.Stagiaire", "Stagiaire")
                        .WithOne("Attestation")
                        .HasForeignKey("StageManager.Models.Attestation", "StagiaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MembreDirection");

                    b.Navigation("Stagiaire");
                });

            modelBuilder.Entity("StageManager.Models.Avenant", b =>
                {
                    b.HasOne("StageManager.Models.Encadreur", "Encadreur")
                        .WithMany()
                        .HasForeignKey("EncadreurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StageManager.Models.Stage", "Stage")
                        .WithOne("Avenant")
                        .HasForeignKey("StageManager.Models.Avenant", "StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encadreur");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("StageManager.Models.ChefDepartement", b =>
                {
                    b.HasOne("StageManager.Models.Departement", "Departement")
                        .WithMany()
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");
                });

            modelBuilder.Entity("StageManager.Models.Convention", b =>
                {
                    b.HasOne("StageManager.Models.MembreDirection", "MembreDirection")
                        .WithMany("Conventions")
                        .HasForeignKey("MembreDirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StageManager.Models.Stage", "Stage")
                        .WithOne("Convention")
                        .HasForeignKey("StageManager.Models.Convention", "StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MembreDirection");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("StageManager.Models.DemandeDeStage", b =>
                {
                    b.HasOne("StageManager.Models.MembreDirection", "MembreDirection")
                        .WithMany("DemandesDeStage")
                        .HasForeignKey("MembreDirectionId");

                    b.Navigation("MembreDirection");
                });

            modelBuilder.Entity("StageManager.Models.DemandeDepotMemoire", b =>
                {
                    b.HasOne("StageManager.Models.MembreDirection", "MembreDirection")
                        .WithMany()
                        .HasForeignKey("MembreDirectionId");

                    b.HasOne("StageManager.Models.Stage", "Stage")
                        .WithMany()
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MembreDirection");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("StageManager.Models.Demandeaccord", b =>
                {
                    b.HasOne("StageManager.Models.ChefDepartement", null)
                        .WithMany("Demandeaccords")
                        .HasForeignKey("ChefDepartementId");

                    b.HasOne("StageManager.Models.DemandeDeStage", "DemandeDeStage")
                        .WithOne("Demandeaccord")
                        .HasForeignKey("StageManager.Models.Demandeaccord", "DemandeStageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StageManager.Models.Encadreur", "Encadreur")
                        .WithMany("Demandeaccords")
                        .HasForeignKey("EncadreurId");

                    b.Navigation("DemandeDeStage");

                    b.Navigation("Encadreur");
                });

            modelBuilder.Entity("StageManager.Models.Departement", b =>
                {
                    b.HasOne("StageManager.Models.ChefDepartement", "ChefDepartement")
                        .WithMany()
                        .HasForeignKey("ChefDepartementId");

                    b.Navigation("ChefDepartement");
                });

            modelBuilder.Entity("StageManager.Models.Domaine", b =>
                {
                    b.HasOne("StageManager.Models.Departement", "Departement")
                        .WithMany("Domaines")
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");
                });

            modelBuilder.Entity("StageManager.Models.Encadreur", b =>
                {
                    b.HasOne("StageManager.Models.Departement", "Departement")
                        .WithMany("Encadreurs")
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StageManager.Models.Domaine", null)
                        .WithMany("Encadreurs")
                        .HasForeignKey("DomaineId");

                    b.Navigation("Departement");
                });

            modelBuilder.Entity("StageManager.Models.FicheDePointage", b =>
                {
                    b.HasOne("StageManager.Models.Encadreur", "Encadreur")
                        .WithMany()
                        .HasForeignKey("EncadreurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StageManager.Models.Stage", "Stage")
                        .WithMany("FicheDePointage")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StageManager.Models.Stagiaire", "Stagiaire")
                        .WithOne("FicheDePointage")
                        .HasForeignKey("StageManager.Models.FicheDePointage", "StagiaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encadreur");

                    b.Navigation("Stage");

                    b.Navigation("Stagiaire");
                });

            modelBuilder.Entity("StageManager.Models.FicheEvaluationEncadreur", b =>
                {
                    b.HasOne("StageManager.Models.Encadreur", "Encadreur")
                        .WithMany("FichesEvaluationEncadreur")
                        .HasForeignKey("EncadreurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StageManager.Models.Stage", "Stage")
                        .WithMany("FicheEvaluationEncadreur")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encadreur");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("StageManager.Models.FicheEvaluationStagiaire", b =>
                {
                    b.HasOne("StageManager.Models.Encadreur", "Encadreur")
                        .WithMany("FichesEvaluationStagiaire")
                        .HasForeignKey("EncadreurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StageManager.Models.Stage", "Stage")
                        .WithOne("FicheEvaluationStagiaire")
                        .HasForeignKey("StageManager.Models.FicheEvaluationStagiaire", "StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StageManager.Models.Stagiaire", "Stagiaire")
                        .WithOne("FicheEvaluationStagiaire")
                        .HasForeignKey("StageManager.Models.FicheEvaluationStagiaire", "StagiaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encadreur");

                    b.Navigation("Stage");

                    b.Navigation("Stagiaire");
                });

            modelBuilder.Entity("StageManager.Models.Memoire", b =>
                {
                    b.HasOne("StageManager.Models.DemandeDepotMemoire", "DemandeDepotMemoire")
                        .WithOne("Memoire")
                        .HasForeignKey("StageManager.Models.Memoire", "DemandeDepotMemoireId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("StageManager.Models.Stage", "Stage")
                        .WithOne("Memoire")
                        .HasForeignKey("StageManager.Models.Memoire", "StageId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("DemandeDepotMemoire");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("StageManager.Models.Stage", b =>
                {
                    b.HasOne("StageManager.Models.Departement", "Departement")
                        .WithMany()
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StageManager.Models.Domaine", null)
                        .WithMany("Stages")
                        .HasForeignKey("DomaineId");

                    b.HasOne("StageManager.Models.Encadreur", "Encadreur")
                        .WithMany("Stages")
                        .HasForeignKey("EncadreurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departement");

                    b.Navigation("Encadreur");
                });

            modelBuilder.Entity("StageManager.Models.Stagiaire", b =>
                {
                    b.HasOne("StageManager.Models.DemandeDeStage", "DemandeDeStage")
                        .WithMany("Stagiaires")
                        .HasForeignKey("DemandeDeStageId");

                    b.HasOne("StageManager.Models.Demandeaccord", "Demandeaccord")
                        .WithMany("stagiaires")
                        .HasForeignKey("DemandeaccordId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("StageManager.Models.Stage", "Stage")
                        .WithMany("Stagiaires")
                        .HasForeignKey("StageId");

                    b.Navigation("DemandeDeStage");

                    b.Navigation("Demandeaccord");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("StageManager.Models.Theme", b =>
                {
                    b.HasOne("StageManager.Models.Demandeaccord", "Demandeaccord")
                        .WithOne("Theme")
                        .HasForeignKey("StageManager.Models.Theme", "DemandeaccordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StageManager.Models.Stage", "Stage")
                        .WithMany()
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demandeaccord");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("StageManager.Models.ChefDepartement", b =>
                {
                    b.Navigation("Demandeaccords");
                });

            modelBuilder.Entity("StageManager.Models.DemandeDeStage", b =>
                {
                    b.Navigation("Demandeaccord")
                        .IsRequired();

                    b.Navigation("Stagiaires");
                });

            modelBuilder.Entity("StageManager.Models.DemandeDepotMemoire", b =>
                {
                    b.Navigation("Memoire")
                        .IsRequired();
                });

            modelBuilder.Entity("StageManager.Models.Demandeaccord", b =>
                {
                    b.Navigation("Theme")
                        .IsRequired();

                    b.Navigation("stagiaires");
                });

            modelBuilder.Entity("StageManager.Models.Departement", b =>
                {
                    b.Navigation("Domaines");

                    b.Navigation("Encadreurs");
                });

            modelBuilder.Entity("StageManager.Models.Domaine", b =>
                {
                    b.Navigation("Encadreurs");

                    b.Navigation("Stages");
                });

            modelBuilder.Entity("StageManager.Models.Encadreur", b =>
                {
                    b.Navigation("Demandeaccords");

                    b.Navigation("FichesEvaluationEncadreur");

                    b.Navigation("FichesEvaluationStagiaire");

                    b.Navigation("Stages");
                });

            modelBuilder.Entity("StageManager.Models.MembreDirection", b =>
                {
                    b.Navigation("Attestations");

                    b.Navigation("Conventions");

                    b.Navigation("DemandesDeStage");
                });

            modelBuilder.Entity("StageManager.Models.Stage", b =>
                {
                    b.Navigation("Avenant")
                        .IsRequired();

                    b.Navigation("Convention")
                        .IsRequired();

                    b.Navigation("FicheDePointage");

                    b.Navigation("FicheEvaluationEncadreur");

                    b.Navigation("FicheEvaluationStagiaire")
                        .IsRequired();

                    b.Navigation("Memoire")
                        .IsRequired();

                    b.Navigation("Stagiaires");
                });

            modelBuilder.Entity("StageManager.Models.Stagiaire", b =>
                {
                    b.Navigation("Attestation")
                        .IsRequired();

                    b.Navigation("FicheDePointage")
                        .IsRequired();

                    b.Navigation("FicheEvaluationStagiaire")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
